// Generated by gencpp from file pingclient/PingPong.msg
// DO NOT EDIT!


#ifndef PINGCLIENT_MESSAGE_PINGPONG_H
#define PINGCLIENT_MESSAGE_PINGPONG_H

#include <ros/service_traits.h>


#include <pingclient/PingPongRequest.h>
#include <pingclient/PingPongResponse.h>


namespace pingclient
{

struct PingPong
{

typedef PingPongRequest Request;
typedef PingPongResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PingPong
} // namespace pingclient


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::pingclient::PingPong > {
  static const char* value()
  {
    return "e2b7059d39a217108a48a8beca86eaf6";
  }

  static const char* value(const ::pingclient::PingPong&) { return value(); }
};

template<>
struct DataType< ::pingclient::PingPong > {
  static const char* value()
  {
    return "pingclient/PingPong";
  }

  static const char* value(const ::pingclient::PingPong&) { return value(); }
};


// service_traits::MD5Sum< ::pingclient::PingPongRequest> should match 
// service_traits::MD5Sum< ::pingclient::PingPong > 
template<>
struct MD5Sum< ::pingclient::PingPongRequest>
{
  static const char* value()
  {
    return MD5Sum< ::pingclient::PingPong >::value();
  }
  static const char* value(const ::pingclient::PingPongRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::pingclient::PingPongRequest> should match 
// service_traits::DataType< ::pingclient::PingPong > 
template<>
struct DataType< ::pingclient::PingPongRequest>
{
  static const char* value()
  {
    return DataType< ::pingclient::PingPong >::value();
  }
  static const char* value(const ::pingclient::PingPongRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::pingclient::PingPongResponse> should match 
// service_traits::MD5Sum< ::pingclient::PingPong > 
template<>
struct MD5Sum< ::pingclient::PingPongResponse>
{
  static const char* value()
  {
    return MD5Sum< ::pingclient::PingPong >::value();
  }
  static const char* value(const ::pingclient::PingPongResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::pingclient::PingPongResponse> should match 
// service_traits::DataType< ::pingclient::PingPong > 
template<>
struct DataType< ::pingclient::PingPongResponse>
{
  static const char* value()
  {
    return DataType< ::pingclient::PingPong >::value();
  }
  static const char* value(const ::pingclient::PingPongResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PINGCLIENT_MESSAGE_PINGPONG_H
